name: Unit Tests CI

on:
  pull_request:
    branches:
      - master-qa
  push:
    branches:
      - master-qa
      - unit-tests-ci

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
        mongodb-version: [4.2]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: LucasBrazi06/ev-ci
        ssh-key: ${{ secrets.ACTION_ACCESS_SUB_MODULES_PRIVATE_REPOS }}
        path: src/assets/configs-ci
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.3.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
        mongodb-replica-set: rs0
    - name: Initialize DB
      run: |
        mongo docker/initdb/000_createMongoUsers.js
        mongo docker/initdb/002_createSuperAdmin.js
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install
      run: npm ci
    - name: npm run build:prod
      run: |
        cp src/assets/configs-ci/config.json src/assets
        npm run build:prod
    - name: npm run start:prod
      run: |
        npm run start:email &
        npm run start:prod &
    - name: npm run test:createContext
      run: |
        if [ ! -d test/config ]; then mkdir -p test/config; fi
        cp src/assets/configs-ci/local.json test/config
        npm run test:createContext
    - name: npm test
      run: npm test

  unit-tests-submodules:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
        mongodb-version: [4.2]
    steps:
    - uses: actions/checkout@v2
      with:
        ssh-key: ${{ secrets.ACTION_ACCESS_SUB_MODULES_PRIVATE_REPOS }}
        submodules: true
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.3.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
        mongodb-replica-set: rs0
    - name: Initialize DB
      run: |
        mongo docker/initdb/000_createMongoUsers.js
        mongo docker/initdb/002_createSuperAdmin.js
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install
      run: npm ci
    - name: npm run build:prod
      run: |
        cp src/assets/configs-ci/config.json src/assets
        npm run build:prod
    - name: npm run start:prod
      run: |
        npm run start:email &
        npm run start:prod &
    - name: npm run test:createContext
      run: |
        if [ ! -d test/config ]; then mkdir -p test/config; fi
        cp src/assets/configs-ci/local.json test/config
        npm run test:createContext
    - name: npm test
      run: npm test

