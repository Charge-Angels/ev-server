# TypeScript Conversion Changes Running Log
## Format
__**FileName.ts:**__
>$Class: *Modifier1 modifier2*
> #constructor
>> param: *type* fsfsf
> #method
>> param: type
> .variable: type, modifier1 modifier2
//Comment

OccpError.ts:
#constructor
	code: string
	message: string
	details: string
.code: string, public readonly
.message: string, public readonly
.details: string, public readonly
//Object.prototype hack might not be needed using typescript?

OCCPConstants.ts:
//exported dict using typescript syntax

SchedularTask.ts
//Exported as interface, added custom type TaskConfig

TaskConfig.ts
//Added config type matching two properties specified in config.json within Scheduler -> Task -> Config

InternalError.ts
//Added public readonly class member, made into class, exported. Type safety string, string array

StatisticSecurity.ts
//npm install @types/mongo-sanitize
//^done to convert require to ts import
 Added type UserStatisticsRequest
  contains Year:string, SiteID:string for lack of better knowledge
 Changed method to return interface
 Made unused parameter optional and any (since unused)
 Added type StatisticsRequest
 Added TODO s, please check.

Pricing.ts
Added PricingSettings classes and PricedConsumption
consider moving PricedConsumption to Entity as Consumption is there already TODO
Added file Consumption.ts under Entity to have a full type for Consumption data
- need to migrate Transaction.js to make Pricing work
- need to migrate Consumption.js to make Pricing work
SimplePricing ported


AppError.ts
Ported, please see TODO and modify accordingly.
Requires User entity to be ported as well
TODO "module" bad name as is keyword in js

NotFoundError.ts
Ported

UnauthorizedError.ts
Ported, requires User to be ported as well

NotificationTask.ts
Ported. requires NotificationResult.ts to be filled in.

AbstractSoapClient.ts
Ported, but requires a LOT of typing to fully utilize typescript capabilities.
Need to reverse engineering strong-soap in order to find out types.
Package @types/strong-soap non existent.

RatingService.ts
Ported. Todo: Remove global as any typecasting.

StatefulChargingService.ts
Ported, but remove global as any typecast

ConflictError.ts
Ported. TODO Type messageParams properly.

BackendError.ts
Ported but requires User to be ported as well

BadRequestError.ts
Ported

MigrationTask.ts
ported

DatabaseUtils.ts
Ported, re=check type of "aggregation"

MongoDBStorage.ts
Ported. Check TODOs.

SchemaValidator.ts

TenantValidator.ts
Changed from JS hacked singleton to proper typescript singleton

Organization...Error.ts

OCPIError.ts
